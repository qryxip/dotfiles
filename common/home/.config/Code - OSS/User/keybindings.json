// Place your key bindings in this file to overwrite the defaults
[
        {
                "key": "ctrl+j",
                "command": "-workbench.action.togglePanel"
        },
        {
                "key": "ctrl+k ctrl+j",
                "command": "-editor.unfoldAll",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+j",
                "command": "-extension.vim_ctrl+j",
                "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
        },
        {
                "key": "ctrl+q",
                "command": "-workbench.action.quit"
        },
        {
                "key": "ctrl+a",
                "command": "-editor.action.selectAll",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+a",
                "command": "-editor.action.webvieweditor.selectAll",
                "when": "webviewEditorFocus"
        },
        {
                "key": "ctrl+a",
                "command": "-list.selectAll",
                "when": "listFocus && listSupportsMultiselect && !inputFocus"
        },
        {
                "key": "ctrl+k z",
                "command": "-workbench.action.toggleZenMode"
        },
        {
                "key": "ctrl+z",
                "command": "-undo",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+z",
                "command": "-redo",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+w",
                "command": "-workbench.action.closeGroup",
                "when": "activeEditorGroupEmpty && multipleEditorGroups"
        },
        {
                "key": "ctrl+w",
                "command": "-workbench.action.closeActiveEditor"
        },
        {
                "key": "ctrl+k w",
                "command": "-workbench.action.closeEditorsInGroup"
        },
        {
                "key": "ctrl+k ctrl+shift+w",
                "command": "-workbench.action.closeAllGroups"
        },
        {
                "key": "ctrl+k ctrl+w",
                "command": "-workbench.action.closeAllEditors"
        },
        {
                "key": "ctrl+shift+w",
                "command": "-workbench.action.closeWindow"
        },
        {
                "key": "ctrl+w",
                "command": "-workbench.action.closeWindow",
                "when": "!editorIsOpen && !multipleEditorGroups"
        },
        {
                "key": "ctrl+meta+w",
                "command": "-workbench.action.toggleTabsVisibility"
        },
        {
                "key": "ctrl+k ctrl+s",
                "command": "-workbench.action.openGlobalKeybindings"
        },
        {
                "key": "ctrl+shift+2",
                "command": "-extension.vim_ctrl+shift+2",
                "when": "editorTextFocus && vim.active && vim.use<C-shift+2>"
        },
        {
                "key": "ctrl+s",
                "command": "-workbench.action.files.save"
        },
        {
                "key": "ctrl+shift+s",
                "command": "-workbench.action.files.saveAs"
        },
        {
                "key": "ctrl+x",
                "command": "-editor.action.clipboardCutAction",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+x",
                "command": "-workbench.view.extensions"
        },
        {
                "key": "ctrl+k ctrl+x",
                "command": "-editor.action.trimTrailingWhitespace",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+k e",
                "command": "-workbench.files.action.focusOpenEditorsView"
        },
        {
                "key": "ctrl+shift+e",
                "command": "-workbench.view.explorer"
        },
        {
                "key": "ctrl+e",
                "command": "-workbench.action.quickOpen"
        },
        {
                "key": "ctrl+e",
                "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "inFilesPicker && inQuickOpen"
        },
        {
                "key": "ctrl+shift+e",
                "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "inFilesPicker && inQuickOpen"
        },
        {
                "key": "ctrl+d",
                "command": "-editor.action.addSelectionToNextFindMatch",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+k ctrl+d",
                "command": "-editor.action.moveSelectionToNextFindMatch",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+shift+d",
                "command": "-workbench.view.debug"
        },
        {
                "key": "ctrl+d",
                "command": "-list.focusPageDown",
                "when": "listFocus && !inputFocus"
        },
        {
                "key": "ctrl+k d",
                "command": "-workbench.files.action.compareWithSaved"
        },
        {
                "key": "ctrl+k ctrl+c",
                "command": "-editor.action.addCommentLine",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+k c",
                "command": "-workbench.files.action.compareWithClipboard"
        },
        {
                "key": "ctrl+c",
                "command": "-editor.action.clipboardCopyAction",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+shift+c",
                "command": "-workbench.action.terminal.copySelection",
                "when": "terminalFocus && terminalTextSelected"
        },
        {
                "key": "ctrl+alt+c",
                "command": "-copyFilePath",
                "when": "!editorFocus"
        },
        {
                "key": "ctrl+shift+alt+c",
                "command": "-copyRelativeFilePath",
                "when": "!editorFocus"
        },
        {
                "key": "ctrl+c",
                "command": "-filesExplorer.copy",
                "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
        },
        {
                "key": "ctrl+c",
                "command": "-keybindings.editor.copyKeybindingEntry",
                "when": "inKeybindings && keybindingFocus"
        },
        {
                "key": "ctrl+c",
                "command": "-problems.action.copy",
                "when": "problemFocus"
        },
        {
                "key": "ctrl+c",
                "command": "-search.action.copyMatch",
                "when": "fileMatchOrMatchFocus"
        },
        {
                "key": "ctrl+alt+c",
                "command": "-search.action.copyPath",
                "when": "fileMatchOrFolderMatchFocus"
        },
        {
                "key": "ctrl+shift+c",
                "command": "-workbench.action.terminal.openNativeConsole",
                "when": "!terminalFocus"
        },
        {
                "key": "ctrl+r",
                "command": "-workbench.action.openRecent"
        },
        {
                "key": "ctrl+shift+r",
                "command": "-editor.action.refactor",
                "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+alt+r",
                "command": "-revealFileInOS",
                "when": "!editorFocus"
        },
        {
                "key": "ctrl+k r",
                "command": "-workbench.action.files.revealActiveFileInWindows"
        },
        {
                "key": "ctrl+r",
                "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                "when": "inQuickOpen && inRecentFilesPicker"
        },
        {
                "key": "ctrl+shift+r",
                "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
                "when": "inQuickOpen && inRecentFilesPicker"
        },
        {
                "key": "ctrl+k f",
                "command": "-workbench.action.closeFolder"
        },
        {
                "key": "ctrl+f",
                "command": "-actions.find"
        },
        {
                "key": "ctrl+shift+f",
                "command": "-workbench.action.findInFiles"
        },
        {
                "key": "ctrl+f",
                "command": "-workbench.action.terminal.focusFindWidget",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+k ctrl+f",
                "command": "-editor.action.formatSelection",
                "when": "editorHasSelection && editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+f",
                "command": "-workbench.view.search",
                "when": "!searchViewletVisible"
        },
        {
                "key": "ctrl+f",
                "command": "-editor.action.extensioneditor.showfind",
                "when": "extensionEditorWebviewFocus"
        },
        {
                "key": "ctrl+f",
                "command": "-editor.action.webvieweditor.showFind",
                "when": "webviewEditorFocus"
        },
        {
                "key": "ctrl+f",
                "command": "-keybindings.editor.searchKeybindings",
                "when": "inKeybindings && keybindingFocus"
        },
        {
                "key": "ctrl+f",
                "command": "-settings.action.search",
                "when": "inSettingsEditor"
        },
        {
                "key": "ctrl+shift+v",
                "command": "-markdown.showPreview",
                "when": "editorLangId == 'markdown'"
        },
        {
                "key": "ctrl+k v",
                "command": "-markdown.showPreviewToSide",
                "when": "editorLangId == 'markdown'"
        },
        {
                "key": "ctrl+v",
                "command": "-editor.action.clipboardPasteAction",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+v",
                "command": "-workbench.action.terminal.paste",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+v",
                "command": "-filesExplorer.paste",
                "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
        },
        {
                "key": "ctrl+k ctrl+t",
                "command": "-workbench.action.selectTheme"
        },
        {
                "key": "ctrl+t",
                "command": "-workbench.action.showAllSymbols"
        },
        {
                "key": "ctrl+shift+t",
                "command": "-workbench.action.reopenClosedEditor"
        },
        {
                "key": "ctrl+shift+g",
                "command": "-workbench.view.scm"
        },
        {
                "key": "ctrl+b",
                "command": "-workbench.action.toggleSidebarVisibility"
        },
        {
                "key": "ctrl+shift+b",
                "command": "-workbench.action.tasks.build"
        },
        {
                "key": "ctrl+g",
                "command": "-workbench.action.gotoLine"
        },
        {
                "key": "ctrl+shift+y",
                "command": "-workbench.debug.action.toggleRepl"
        },
        {
                "key": "ctrl+y",
                "command": "-redo",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+h",
                "command": "-editor.action.startFindReplaceAction"
        },
        {
                "key": "ctrl+shift+h",
                "command": "-workbench.action.replaceInFiles"
        },
        {
                "key": "ctrl+k ctrl+h",
                "command": "-workbench.action.output.toggleOutput"
        },
        {
                "key": "ctrl+n",
                "command": "-workbench.action.files.newUntitledFile"
        },
        {
                "key": "ctrl+shift+n",
                "command": "-workbench.action.newWindow"
        },
        {
                "key": "ctrl+k ctrl+u",
                "command": "-editor.action.removeCommentLine",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+u",
                "command": "-cursorUndo",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+u",
                "command": "-list.focusPageUp",
                "when": "listFocus && !inputFocus"
        },
        {
                "key": "ctrl+k u",
                "command": "-workbench.action.closeUnmodifiedEditors"
        },
        {
                "key": "ctrl+shift+j",
                "command": "-workbench.action.search.toggleQueryDetails",
                "when": "searchViewletVisible"
        },
        {
                "key": "ctrl+m",
                "command": "-editor.action.toggleTabFocusMode"
        },
        {
                "key": "ctrl+k m",
                "command": "-workbench.action.editor.changeLanguageMode"
        },
        {
                "key": "ctrl+k ctrl+m",
                "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
        },
        {
                "key": "ctrl+shift+m",
                "command": "-workbench.actions.view.problems"
        },
        {
                "key": "ctrl+k ctrl+i",
                "command": "-editor.debug.action.showDebugHover",
                "when": "editorTextFocus && inDebugMode"
        },
        {
                "key": "ctrl+shift+i",
                "command": "-editor.action.formatDocument",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+k ctrl+i",
                "command": "-editor.action.showHover",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+i",
                "command": "-expandLineSelection",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+shift+k",
                "command": "-editor.action.deleteLines",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+k ctrl+up",
                "command": "-workbench.action.focusAboveGroup"
        },
        {
                "key": "ctrl+k ctrl+down",
                "command": "-workbench.action.focusBelowGroup"
        },
        {
                "key": "ctrl+k ctrl+left",
                "command": "-workbench.action.focusLeftGroup"
        },
        {
                "key": "ctrl+k ctrl+right",
                "command": "-workbench.action.focusRightGroup"
        },
        {
                "key": "ctrl+k ctrl+0",
                "command": "-editor.foldAll",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+/",
                "command": "-editor.foldAllBlockComments",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+/",
                "command": "-editor.foldAllBlockComments",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+8",
                "command": "-editor.foldAllMarkerRegions",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+1",
                "command": "-editor.foldLevel1",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+2",
                "command": "-editor.foldLevel2",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+2",
                "command": "-editor.foldLevel2",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+3",
                "command": "-editor.foldLevel3",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+3",
                "command": "-editor.foldLevel3",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+4",
                "command": "-editor.foldLevel4",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+5",
                "command": "-editor.foldLevel5",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+5",
                "command": "-editor.foldLevel5",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+6",
                "command": "-editor.foldLevel6",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+6",
                "command": "-editor.foldLevel6",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+7",
                "command": "-editor.foldLevel7",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+[",
                "command": "-editor.foldRecursively",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k down",
                "command": "-workbench.action.moveActiveEditorGroupDown"
        },
        {
                "key": "ctrl+k left",
                "command": "-workbench.action.moveActiveEditorGroupLeft"
        },
        {
                "key": "ctrl+k right",
                "command": "-workbench.action.moveActiveEditorGroupRight"
        },
        {
                "key": "ctrl+k up",
                "command": "-workbench.action.moveActiveEditorGroupUp"
        },
        {
                "key": "ctrl+k o",
                "command": "-workbench.action.files.showOpenedFileInNewWindow"
        },
        {
                "key": "ctrl+k f12",
                "command": "-editor.action.openDeclarationToTheSide",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+k ctrl+o",
                "command": "-workbench.action.files.openFolder"
        },
        {
                "key": "ctrl+k ctrl+p",
                "command": "-workbench.action.showAllEditors"
        },
        {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorOrthogonal"
        },
        {
                "key": "ctrl+k ctrl+9",
                "command": "-editor.unfoldAllMarkerRegions",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+]",
                "command": "-editor.unfoldRecursively",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+k",
                "command": "-editor.action.defineKeybinding",
                "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
        },
        {
                "key": "ctrl+k ctrl+k",
                "command": "-keybindings.editor.defineKeybinding",
                "when": "inKeybindings && keybindingFocus"
        },
        {
                "key": "ctrl+k p",
                "command": "-workbench.action.files.copyPathOfActiveFile"
        },
        {
                "key": "ctrl+k enter",
                "command": "-workbench.action.keepEditor"
        },
        {
                "key": "ctrl+shift+l",
                "command": "-editor.action.selectHighlights",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+shift+o",
                "command": "-workbench.action.gotoSymbol"
        },
        {
                "key": "ctrl+o",
                "command": "-workbench.action.files.openFile"
        },
        {
                "key": "ctrl+shift+p",
                "command": "-workbench.action.showCommands"
        },
        {
                "key": "ctrl+p",
                "command": "-workbench.action.quickOpen"
        },
        {
                "key": "ctrl+p",
                "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "inFilesPicker && inQuickOpen"
        },
        {
                "key": "ctrl+shift+p",
                "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "inFilesPicker && inQuickOpen"
        },
        {
                "key": "ctrl+shift+[",
                "command": "-editor.fold",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+[",
                "command": "-editor.action.outdentLines",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+alt+-",
                "command": "-workbench.action.quickInputBack",
                "when": "inQuickOpen"
        },
        {
                "key": "ctrl+alt+-",
                "command": "-workbench.action.navigateBack"
        },
        {
                "key": "ctrl+shift+-",
                "command": "-workbench.action.navigateForward"
        },
        {
                "key": "ctrl+numpad0",
                "command": "-workbench.action.zoomReset"
        },
        {
                "key": "ctrl+shift+=",
                "command": "-workbench.action.zoomIn"
        },
        {
                "key": "ctrl+numpad_add",
                "command": "-workbench.action.zoomIn"
        },
        {
                "key": "ctrl+numpad_subtract",
                "command": "-workbench.action.zoomOut"
        },
        {
                "key": "ctrl+]",
                "command": "-editor.action.indentLines",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+]",
                "command": "-editor.unfold",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+shift+;",
                "command": "-breadcrumbs.focus"
        },
        {
                "key": "ctrl+\\",
                "command": "-workbench.action.splitEditor"
        },
        {
                "key": "ctrl+\\",
                "command": "-workbench.action.terminal.split",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+\\",
                "command": "-editor.action.jumpToBracket",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+shift+[IntlBackslash]",
                "command": "-editor.action.inPlaceReplace.down",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+[IntlBackslash]",
                "command": "-editor.action.inPlaceReplace.up",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+[IntlBackslash]",
                "command": "-breadcrumbs.focusAndSelect"
        },
        {
                "key": "ctrl+,",
                "command": "-workbench.action.openSettings"
        },
        {
                "key": "ctrl+shift+,",
                "command": "-editor.action.inPlaceReplace.up",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+.",
                "command": "-settings.action.editFocusedSetting",
                "when": "inSettingsSearch"
        },
        {
                "key": "ctrl+.",
                "command": "-editor.action.quickFix",
                "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+.",
                "command": "-editor.action.inPlaceReplace.down",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+.",
                "command": "-breadcrumbs.focusAndSelect"
        },
        {
                "key": "ctrl+/",
                "command": "-editor.action.commentLine",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "alt+w",
                "command": "-toggleFindWholeWord",
                "when": "editorFocus"
        },
        {
                "key": "alt+w",
                "command": "-toggleSearchWholeWord",
                "when": "searchInputBoxFocus && searchViewletVisible"
        },
        {
                "key": "alt+c",
                "command": "-toggleFindCaseSensitive",
                "when": "editorFocus"
        },
        {
                "key": "alt+c",
                "command": "-toggleSearchCaseSensitive",
                "when": "searchInputBoxFocus && searchViewletVisible"
        },
        {
                "key": "alt+r",
                "command": "-toggleFindRegex",
                "when": "editorFocus"
        },
        {
                "key": "alt+r",
                "command": "-toggleSearchRegex",
                "when": "searchInputBoxFocus && searchViewletVisible"
        },
        {
                "key": "shift+alt+i",
                "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+o",
                "command": "-editor.action.organizeImports",
                "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
        },
        {
                "key": "alt+l",
                "command": "-toggleFindInSelection",
                "when": "editorFocus"
        },
        {
                "key": "shift+alt+up",
                "command": "-editor.action.insertCursorAbove",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+down",
                "command": "-editor.action.insertCursorBelow",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+shift+alt+down",
                "command": "-editor.action.copyLinesDownAction",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+alt+up",
                "command": "-editor.action.copyLinesUpAction",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "shift+alt+right",
                "command": "-editor.action.smartSelect.grow",
                "when": "editorTextFocus"
        },
        {
                "key": "alt+right",
                "command": "-workbench.action.terminal.focusNextPane",
                "when": "terminalFocus"
        },
        {
                "key": "alt+down",
                "command": "-workbench.action.terminal.focusNextPane",
                "when": "terminalFocus"
        },
        {
                "key": "alt+up",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "terminalFocus"
        },
        {
                "key": "alt+up",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "terminalFocus"
        },
        {
                "key": "alt+left",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "terminalFocus"
        },
        {
                "key": "alt+left",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "terminalFocus"
        },
        {
                "key": "shift+alt+1",
                "command": "-workbench.action.moveEditorToFirstGroup"
        },
        {
                "key": "shift+alt+9",
                "command": "-workbench.action.moveEditorToLastGroup"
        },
        {
                "key": "shift+alt+9",
                "command": "-workbench.action.moveEditorToLastGroup"
        },
        {
                "key": "ctrl+alt+right",
                "command": "-workbench.action.moveEditorToNextGroup"
        },
        {
                "key": "ctrl+alt+left",
                "command": "-workbench.action.moveEditorToPreviousGroup"
        },
        {
                "key": "alt+down",
                "command": "-editor.action.moveLinesDownAction",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "alt+up",
                "command": "-editor.action.moveLinesUpAction",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "alt+f5",
                "command": "-workbench.action.editor.nextChange",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+f5",
                "command": "-workbench.action.editor.previousChange",
                "when": "editorTextFocus"
        },
        {
                "key": "alt+0",
                "command": "-workbench.action.lastEditorInGroup"
        },
        {
                "key": "alt+f1",
                "command": "-editor.action.showAccessibilityHelp",
                "when": "editorFocus"
        },
        {
                "key": "alt+f3",
                "command": "-editor.action.dirtydiff.next",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+f3",
                "command": "-editor.action.dirtydiff.previous",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+left",
                "command": "-editor.action.smartSelect.shrink",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+0",
                "command": "-workbench.action.toggleEditorGroupLayout"
        },
        {
                "key": "alt+z",
                "command": "-editor.action.toggleWordWrap"
        },
        {
                "key": "alt+enter",
                "command": "-debug.openBreakpointToSide",
                "when": "breakpointsFocused"
        },
        {
                "key": "ctrl+alt+enter",
                "command": "-editor.action.replaceAll",
                "when": "editorFocus && findWidgetVisible"
        },
        {
                "key": "alt+enter",
                "command": "-editor.action.selectAllMatches",
                "when": "editorFocus && findWidgetVisible"
        },
        {
                "key": "shift+alt+down",
                "command": "-extension.vim_cmd+alt+down",
                "when": "editorTextFocus && vim.active && !inDebugRepl"
        },
        {
                "key": "shift+alt+up",
                "command": "-extension.vim_cmd+alt+up",
                "when": "editorTextFocus && vim.active && !inDebugRepl"
        },
        {
                "key": "alt+down",
                "command": "-history.showNext",
                "when": "historyNavigationEnabled && historyNavigationWidget"
        },
        {
                "key": "alt+up",
                "command": "-history.showPrevious",
                "when": "historyNavigationEnabled && historyNavigationWidget"
        },
        {
                "key": "alt+pagedown",
                "command": "-scrollPageDown",
                "when": "textInputFocus"
        },
        {
                "key": "alt+pageup",
                "command": "-scrollPageUp",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+alt+enter",
                "command": "-search.action.replaceAll",
                "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
        },
        {
                "key": "alt+down",
                "command": "-showNextParameterHint",
                "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
        },
        {
                "key": "alt+up",
                "command": "-showPrevParameterHint",
                "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
        },
        {
                "key": "ctrl+alt+space",
                "command": "-toggleSuggestionFocus",
                "when": "suggestWidgetVisible && textInputFocus"
        },
        {
                "key": "alt+f5",
                "command": "-workbench.action.compareEditor.nextChange",
                "when": "textCompareEditorVisible"
        },
        {
                "key": "shift+alt+f5",
                "command": "-workbench.action.compareEditor.previousChange",
                "when": "textCompareEditorVisible"
        },
        {
                "key": "ctrl+shift+up",
                "command": "-editor.action.insertCursorAbove",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+shift+down",
                "command": "-editor.action.insertCursorBelow",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+f2",
                "command": "-editor.action.changeAll",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+`",
                "command": "-workbench.action.terminal.new"
        },
        {
                "key": "ctrl+backspace",
                "command": "-workbench.action.terminal.deleteWordLeft",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+delete",
                "command": "-workbench.action.terminal.deleteWordRight",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+delete",
                "command": "-workbench.action.terminal.deleteWordRight",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+delete",
                "command": "-workbench.action.terminal.deleteWordRight",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+f3",
                "command": "-editor.action.nextSelectionMatchFindAction",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+shift+f3",
                "command": "-editor.action.previousSelectionMatchFindAction",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+1",
                "command": "-workbench.action.focusFirstEditorGroup"
        },
        {
                "key": "ctrl+0",
                "command": "-workbench.action.focusSideBar"
        },
        {
                "key": "ctrl+f12",
                "command": "-editor.action.goToImplementation",
                "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+f12",
                "command": "-editor.action.goToImplementation",
                "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+f12",
                "command": "-editor.action.goToImplementation",
                "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "-editor.action.insertLineBefore",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+enter",
                "command": "-editor.action.insertLineAfter",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+pageup",
                "command": "-workbench.action.moveEditorLeftInGroup"
        },
        {
                "key": "ctrl+shift+pagedown",
                "command": "-workbench.action.moveEditorRightInGroup"
        },
        {
                "key": "ctrl+shift+pagedown",
                "command": "-workbench.action.moveEditorRightInGroup"
        },
        {
                "key": "ctrl+9",
                "command": "-workbench.action.lastEditorInGroup"
        },
        {
                "key": "ctrl+9",
                "command": "-workbench.action.lastEditorInGroup"
        },
        {
                "key": "ctrl+9",
                "command": "-workbench.action.lastEditorInGroup"
        },
        {
                "key": "ctrl+9",
                "command": "-workbench.action.lastEditorInGroup"
        },
        {
                "key": "ctrl+9",
                "command": "-workbench.action.lastEditorInGroup"
        },
        {
                "key": "ctrl+9",
                "command": "-workbench.action.lastEditorInGroup"
        },
        {
                "key": "ctrl+f4",
                "command": "-extension.node-debug.pickLoadedScript",
                "when": "debugType == 'node'"
        },
        {
                "key": "ctrl+f4",
                "command": "-extension.node-debug.pickLoadedScript",
                "when": "debugType == 'node2'"
        },
        {
                "key": "ctrl+f4",
                "command": "-extension.node-debug.pickLoadedScript",
                "when": "debugType == 'node2'"
        },
        {
                "key": "ctrl+pagedown",
                "command": "-workbench.action.nextEditor"
        },
        {
                "key": "ctrl+pagedown",
                "command": "-workbench.action.nextEditor"
        },
        {
                "key": "ctrl+tab",
                "command": "-workbench.action.openNextRecentlyUsedEditorInGroup"
        },
        {
                "key": "ctrl+pageup",
                "command": "-workbench.action.previousEditor"
        },
        {
                "key": "ctrl+shift+tab",
                "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup"
        },
        {
                "key": "ctrl+shift+f10",
                "command": "-editor.action.previewDeclaration",
                "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+shift+f10",
                "command": "-editor.action.previewDeclaration",
                "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+shift+f12",
                "command": "-editor.action.peekImplementation",
                "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+shift+f12",
                "command": "-editor.action.peekImplementation",
                "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+shift+f12",
                "command": "-editor.action.peekImplementation",
                "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+shift+down",
                "command": "-workbench.action.terminal.resizePaneDown",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+left",
                "command": "-workbench.action.terminal.resizePaneLeft",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+left",
                "command": "-workbench.action.terminal.resizePaneLeft",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+right",
                "command": "-workbench.action.terminal.resizePaneRight",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+right",
                "command": "-workbench.action.terminal.resizePaneRight",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+right",
                "command": "-workbench.action.terminal.resizePaneRight",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+right",
                "command": "-workbench.action.terminal.resizePaneRight",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+right",
                "command": "-workbench.action.terminal.resizePaneRight",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+right",
                "command": "-workbench.action.terminal.resizePaneRight",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+up",
                "command": "-workbench.action.terminal.resizePaneUp",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+up",
                "command": "-workbench.action.terminal.resizePaneUp",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+f5",
                "command": "-workbench.action.debug.restart",
                "when": "inDebugMode"
        },
        {
                "key": "ctrl+shift+down",
                "command": "-workbench.action.terminal.scrollDown",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+up",
                "command": "-workbench.action.terminal.scrollUp",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+5",
                "command": "-workbench.action.terminal.split",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+f5",
                "command": "-workbench.action.debug.run",
                "when": "!inDebugMode"
        },
        {
                "key": "ctrl+shift+a",
                "command": "-editor.action.blockComment",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+`",
                "command": "-workbench.action.terminal.toggleTerminal"
        },
        {
                "key": "ctrl+shift+space",
                "command": "-editor.action.triggerParameterHints",
                "when": "editorHasSignatureHelpProvider && editorTextFocus"
        },
        {
                "key": "ctrl+space",
                "command": "-editor.action.triggerSuggest",
                "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+right",
                "command": "-breadcrumbs.focusNext",
                "when": "breadcrumbsActive && breadcrumbsVisible"
        },
        {
                "key": "ctrl+left",
                "command": "-breadcrumbs.focusPrevious",
                "when": "breadcrumbsActive && breadcrumbsVisible"
        },
        {
                "key": "ctrl+enter",
                "command": "-breadcrumbs.revealFocused",
                "when": "breadcrumbsActive && breadcrumbsVisible"
        },
        {
                "key": "ctrl+enter",
                "command": "-breadcrumbs.revealFocusedFromTreeAside",
                "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
        },
        {
                "key": "ctrl+end",
                "command": "-cursorBottom",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+shift+end",
                "command": "-cursorBottomSelect",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+home",
                "command": "-cursorTop",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+shift+home",
                "command": "-cursorTopSelect",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+right",
                "command": "-cursorWordEndRight",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+shift+right",
                "command": "-cursorWordEndRightSelect",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+left",
                "command": "-cursorWordStartLeft",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+shift+left",
                "command": "-cursorWordStartLeftSelect",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+enter",
                "command": "-debug.openBreakpointToSide",
                "when": "breakpointsFocused"
        },
        {
                "key": "ctrl+backspace",
                "command": "-deleteWordLeft",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+delete",
                "command": "-deleteWordRight",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-editor.action.replaceOne",
                "when": "editorFocus && findWidgetVisible"
        },
        {
                "key": "ctrl+enter",
                "command": "-explorer.openToSide",
                "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
        },
        {
                "key": "ctrl+enter",
                "command": "-openReferenceToSide",
                "when": "referenceSearchTreeFocused && referenceSearchVisible"
        },
        {
                "key": "ctrl+enter",
                "command": "-problems.action.openToSide",
                "when": "problemFocus"
        },
        {
                "key": "ctrl+down",
                "command": "-scrollLineDown",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+down",
                "command": "-scrollLineDown",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+up",
                "command": "-scrollLineUp",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+up",
                "command": "-scrollLineUp",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+up",
                "command": "-search.action.focusSearchFromResults",
                "when": "firstMatchFocus && searchViewletVisible"
        },
        {
                "key": "ctrl+enter",
                "command": "-search.action.openResultToSide",
                "when": "fileMatchOrMatchFocus && searchViewletVisible"
        },
        {
                "key": "ctrl+enter",
                "command": "-search.action.openResultToSide",
                "when": "fileMatchOrMatchFocus && searchViewletVisible"
        },
        {
                "key": "ctrl+enter",
                "command": "-search.action.openResultToSide",
                "when": "fileMatchOrMatchFocus && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replace",
                "when": "matchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replace",
                "when": "matchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replace",
                "when": "matchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replace",
                "when": "matchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replace",
                "when": "matchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replace",
                "when": "matchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replace",
                "when": "matchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replace",
                "when": "matchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replaceAllInFile",
                "when": "fileMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFile",
                "when": "fileMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFile",
                "when": "fileMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+1",
                "command": "-search.action.replaceAllInFolder",
                "when": "folderMatchFocus && replaceActive && searchViewletVisible"
        },
        {
                "key": "ctrl+down",
                "command": "-search.focus.nextInputBox",
                "when": "inputBoxFocus && searchViewletVisible"
        },
        {
                "key": "ctrl+up",
                "command": "-search.focus.previousInputBox",
                "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
        },
        {
                "key": "ctrl+pagedown",
                "command": "-selectNextPageSuggestion",
                "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
        },
        {
                "key": "ctrl+down",
                "command": "-selectNextSuggestion",
                "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
        },
        {
                "key": "ctrl+pageup",
                "command": "-selectPrevPageSuggestion",
                "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
        },
        {
                "key": "ctrl+up",
                "command": "-selectPrevSuggestion",
                "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
        },
        {
                "key": "ctrl+space",
                "command": "-toggleSuggestionDetails",
                "when": "suggestWidgetVisible && textInputFocus"
        },
        {
                "key": "ctrl+8",
                "command": "-workbench.action.focusEighthEditorGroup"
        },
        {
                "key": "ctrl+5",
                "command": "-workbench.action.focusFifthEditorGroup"
        },
        {
                "key": "ctrl+4",
                "command": "-workbench.action.focusFourthEditorGroup"
        },
        {
                "key": "ctrl+2",
                "command": "-workbench.action.focusSecondEditorGroup"
        },
        {
                "key": "ctrl+7",
                "command": "-workbench.action.focusSeventhEditorGroup"
        },
        {
                "key": "ctrl+6",
                "command": "-workbench.action.focusSixthEditorGroup"
        },
        {
                "key": "ctrl+3",
                "command": "-workbench.action.focusThirdEditorGroup"
        },
        {
                "key": "ctrl+tab",
                "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
                "when": "inEditorsPicker && inQuickOpen"
        },
        {
                "key": "ctrl+shift+tab",
                "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
                "when": "inEditorsPicker && inQuickOpen"
        },
        {
                "key": "ctrl+",
                "command": "extension.vim_ctrl+j"
        }
]